#day17

자바 공부하는 방법
	
	자바 프로그램 사용하는 방법
	
		클래스 사용하는 방법
		
			: 해당 클래스를 new시켜서 힙 메모리에 올려 놓은 후 필요한 것을 꺼내서 사용하는 것 
			
			=> new 시키면 힙에 만들어진 인스턴스의 주소를 알려줄 것이고 이것을 변수에 기억시켜서 
			  
			  그 변수에 접근해서 멤버를 사용하는 것
			  
			  ex) Abc a = new Abc();
			  
			  	  a.abc();
			  	  a.no;			

				  Abc a1; ==> (x)
				  
				  
	이후의 자바 공부법
	
		1. 클래스를 많이 만들어 본다.
		
		2. 함수를 많이 만들어 본다.
		
		3. 만든 클래스를 가져와서 사용한다.
		
		만들고 싶은 프로그램은 직접 만들어본다.
		
		
-------------------------------------------------------------------------------------------------------------------
	
	<스트림(Stream)> : 자바에서 외부 장치와 데이터를 주고 받는 유일한 방법
					   
					   빨대와 같은 역할로, 스트림을 외부 장치에 꽂은 뒤 같은 함수(빨대를 빨면)를 이용하면
					   외부 장치의 데이터가 들어온다.
			
			
					   
		* 특징
			
			1. 단방향 
				
				: 한 방향으로만 데이터를 보낼 수 있다. 데이터를 주고 받으려면 스트림은 2개가 필요하다.
			
			
			
		* 종류 (방향성)
		
			1. 데이터 -> 프로그램
				
				1) InputStream
				
				2) Reader
			
			2. 프로그램 -> 데이터
			
				1) OutputStream
				
				2) Writer
				
				
				
		* 종류 (데이터 양)
		
			1. byte 단위 (1byte) : 속도 느림, 기계어 처리 가능(2진수 비트코드로 전달, 실제 실행 가능한 프로그램) 
			
				1) InputStream
				
					* 주요 함수
					
						- int read() : 1byte(한 문자)만 읽는 함수, 반환값은 읽은 데이터의 타입(문자)
						
						- int read(byte[] b) : 여러 byte를 읽는 함수, 반환값은 읽은 데이터의 갯수(byte 수), 읽은 결과는 byte 배열에 기억 
						
						- int read(byte[] b, int off, int len) : 여러 byte를 읽는 함수, 반환값은 읽은 데이터의 갯수(byte 수), 배열의 지정한 위치에서부터 지정한 갯수만큼만 읽는다. 
						
				
				2) FileIntputStream : 파일에 연결되는 입력용 스트림
					
					* 생성 방법(생성자) : FileIntputStream(String name//==파일 이름)
					
						
				3) FileOutputStream : 파일로 연결된 내보내는 방향의 스트림
				
					* 기본 함수 (OutputStream의 기본함수들) 
					
						- void write(int b) : 1byte만 내보내는 함수
						
						- void write(byte[] b) : 여러 byte를 내보내는 함수
						
						- void write(byte[] b, int off, int len) : 여러 문자 중 지정한 부분(int off : 시작 위치, int len : 데이터 갯수)만 내보내는 함수 
																				
						
			
			2. char 단위 (2byte) : 속도 빠름, 문자 처리만 가능(txt파일 등) 
			
				1) -Reader
				
				2) -Writer
				
				
				
		* 종류 (상대방 종류)
		
			1. 타겟(기본) 스트림 : 외부 장치에 직접 연결되는 스트림
			
			2. 필터(보조) 스트림 : 스트림에	연결되는 스트림 (스트림 속도 향상 및 편의 개선 목적)
			
				+) 기본 스트림은 필수, 필터 스트림은 필요에 의한 선택
				
	
	
	
----------

	java.util.io 패키지 소속		 	
	
	
	<File>  :  파일에 대한 정보(이름, 위치, 크기 등)를 처리하기 위한 클래스	
			 			   
			 스트림은 아니다. (데이터 입출력 기능은 없다.) 외부 장치 중 가장 많이 사용하는 것이 파일이기 때문에 
	
	
		* 생성 방법  
			
			1. File(String pathname) : 파일의 경로와 이름을 지정
			
			2. File(String parent, String child) : 파일의 경로와 이름을 따로 지정							
	
			3. File(File parent//파일 객체, String child) : 파일 정보를 이용하고 파일의 이름만 다시 지정
		
			4. Files(URI uri) : 네트워크에서 다른 시스템에 있는 파일의 정보를 만든다.
	
			
				+) 자바에서는 폴더 자체도 파일로 처리한다.
		
					ex) File f = new File("c:\\"); ==> (o) 
		
		
		
		* 참고 함수
		
			1. 정보 알아내는 함수
				
				1) getName() : 파일 이름만 알아내는 함수
				
				2) getParent() : 폴더 이름만 알아내는 함수
				
				3) boolean exists() : 파일의 존재 여부 알려주는 함수
				
				4) long length() : 파일의 크기 알려주는 함수 (파일 크기는 byte 단위로 거대하기 때문)
				
					
							
			2. 	외부 작업 하기 위한 함수 : 데이터 입출력 외에 필요한 작업 하는 함수들
			
				1) delete() : 파일 삭제
				
				2) mkdir() : 폴더 1개 생성
				
				3) mkdirs() : 폴더들 생성 (계층으로 가능)
				
					ex) a/b/c/d => 한 번에 생성 가능
				
				4) renameTo() : 파일 이름 변경
				
				5) list() : 폴더에 있는 파일 목록을 구함
				
	
					+) String[] list() : 파일 이름만 알아낸다.
					   
					   File[] listFiles() : 파일에 대한 모든 정보까지 알아낸다.
					   
					   						=> 일반적인 파일의 목록 알아내는 함수
					   
					   
					   String[] list(FilenameFilter filter)
					   
					   File[] listFiles(FileFilter filter)
					   
					   File[] listFiles(FilenameFilter filter)
					   
					   ==> 원하는 파일만 필터링해서 리스트를 만들 수 있는 함수	
					   
					
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
					   
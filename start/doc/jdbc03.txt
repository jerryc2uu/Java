#jdbc03

	<BigDecimal>
: 자바의 정수(long)로 표현할 수 없는 숫자 사용하기 위한 클래스(19자리 넘어갈 때..)
  주로 데이터베이스와 연동할 때 사용
  오라클의 NUMBER 타입은 최대 자릿수가 32자리까지 기억할 수 있는데
  자바의 long 타입은 최대 19자리까지 기억할 수 있기 때문에 문제가 된다.
  이 경우 사용하는 클래스

	[예]
		BigDecimal big = new BigDecimal("12345678901234567890");	

---------------------
	
	<형식화 클래스>
	: 주로 처리된 결과를 보기 좋게 출력하기 위한 목적으로 사용하는 클래스
	  형식을 정해서 그 형식에 맞는 문자열 만들어주는 클래스
		
		ex) SimpleDateFormat => 날짜
		
	
		1. DecimalFormat : 숫자 데이터 -> 문자열
			
			[사용 방법]
				DecimalFormat(String pattern)
				
				=> 어떤 모양으로 변환시킬 지 패턴을 입력		
			
			[주요함수]
				
				format(double number) : 숫자 (double : 숫자 중 가장 큰 타입)
				
					[패턴 지정법]
						
						0			한 자리 숫자 의미, 무효 숫자도 0으로 표시
						#			한 자리 숫자 의미, 무효 숫자는 표시 안 함
						.			소수점의 위치
						,			3자리마다 표시
						-			음수일 경우 - 부호 위치 알려줌
						E			실수일 경우 지수 형태로 표시
						:			패턴 구분
									(양수일 경우와 음수일 경우를 구분해서 처리할 때 사용)
						%			백분율 표시
						\u00A4		화폐 단위 표시
							
							
							
		2. SimpleDateFormat : 날짜 데이터 -> 문자열
		
			[생성 방법]
				SimpleDateFormat form = new SimpleDateFormat("yyyy년 MM월 dd일 HH:mm:ss")
			
			[주요함수]
				
				format(double number) : 숫자 (double : 숫자 중 가장 큰 타입)
				
			[패턴지정법]
				
				G	연대(BD, AD)
			*	y	년도	
			*	M	월(1 ~ 12)
				w	1년 중 몇 번째 주
			*	W	월 중 몇 번째 주
				D	년의 몇 번째 일
			*	d	월의 몇 번째 일	
				F	월의 몇 번째 요일(1 ~ 5)
			*	E	요일
			*	a	오전/오후(am/pm)
			*	H	시간(0 ~ 23)
				h	시간(1 ~ 12)
				k	시간(1 ~ 24)
			*	K	시간(0 ~ 11)
			*	m	분(0 ~ 59)
			*	s	초(0 ~ 59)
				S	천 분의 일 초 (0 ~ 999)
				z	Time Zone(General time zone)
				Z	Time Zone(RFC 822 time zone)
				'	escape 문자(특수 문자 표현 시 사용)
		
		
		3. ChoiceFormat : switch 등 이용하는 경우를 더 간소화
						  특정 범위 값을 특정 문자열로 변환시키는 클래스
			
			[생성방법]
				ChoiceForamt(double[] limits, String[] formats)
					
					double[] limits : 치환될 범위
					String[] formats : 치환할 문자
			
			[주요함수]
				
				format(double number) : 숫자 (double : 숫자 중 가장 큰 타입)
				
		
		
		4. MassageFormat : 특정 문자열에 특정 위치의 내용만 변경되는 경우, 문자열 전체를 만들지 않고 
						   변경되는 내용만 변화시켜서 하나의 문자열을 만드는 클래스 	
						   
			
			[예]
				"INSERT INTO emp VALUES( 1234, '제니', 'jennie', ...)"
				"INSERT INTO emp VALUES( 1235, '리사', 'lisa', ...)"
				"INSERT INTO emp VALUES( 1236, '로제', 'rose', ...)"
				"INSERT INTO emp VALUES( 1237, '지수', 'jisoo', ...)"
				
				위와 같은 문자열을 여러 개 만들 경우 처음부터 다시 만들지 않도록 하는 클래스
				
			[주요함수]
				
				1) format(double number) : 숫자 (double : 숫자 중 가장 큰 타입)
				
				2) parse(String source) : 주어진 문자열 중 실제 변화되는 데이터 부분만 알아내는 함수
				
				
				
					
				
			
	
	  
	
	
 